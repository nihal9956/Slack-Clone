{"version":3,"sources":["Header.js","firebase.js","ChatInput.js","Message.js","Chat.js","SidebarOptions.js","Sidebar.js","Login.js","App.js","serviceWorker.js","reducer/reducer.js","index.js","actionType/actionType.js"],"names":["Header","user","useSelector","state","className","Avatar","alt","displayName","src","photoURL","type","placeholder","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","ChatInput","channelName","channelId","useState","Input","setInput","value","onChange","e","target","Button","onClick","preventDefault","collection","doc","add","message","timestamp","FieldValue","serverTimestamp","avatar","Message","Date","toDate","toLocaleString","Chat","roomId","useParams","roomDetailes","setRoomDetailes","roomMessages","setRoomMessages","useEffect","onSnapshot","snapshot","data","orderBy","docs","map","console","log","name","SidebarOptions","Icon","addChannelOption","id","title","history","useHistory","prompt","push","Sidebar","channels","setchannel","email","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","channel","Login","dispatch","useDispatch","signInWithPopup","then","result","SET_USER","catch","error","alert","App","path","Boolean","window","location","hostname","match","require","initialState","reducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.322cd2f4.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport {Avatar} from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nfunction Header() {\r\n  const user=useSelector(state=>state.user)\r\n    return (\r\n        <div className='header'>\r\n            <div className='header-left'>\r\n              <Avatar alt={user?.displayName}\r\n               src={user?.photoURL}\r\n              \r\n              />\r\n              <QueryBuilderIcon/>\r\n            </div>\r\n            <div className='header-center'>\r\n          <SearchIcon/>\r\n          <input type='text' placeholder='Search room name'/>\r\n            </div>\r\n            <div className='header-left'>\r\n        <HelpIcon/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA65zvGEiwUFghOLoRmxvvX4qXUuQT_SF4\",\r\n    authDomain: \"slack-24fec.firebaseapp.com\",\r\n    databaseURL: \"https://slack-24fec.firebaseio.com\",\r\n    projectId: \"slack-24fec\",\r\n    storageBucket: \"slack-24fec.appspot.com\",\r\n    messagingSenderId: \"825428536127\",\r\n    appId: \"1:825428536127:web:299f81307b7b8c8fdb418a\",\r\n    measurementId: \"G-HY5CK20DWE\"\r\n  };\r\n\r\n  const firebaseApp=firebase.initializeApp(firebaseConfig)\r\n  const db=firebaseApp.firestore();\r\n  const auth=firebase.auth();\r\n  const provider= new firebase.auth.GoogleAuthProvider()\r\n\r\n  export {auth,provider}\r\n  export default db","import React,{useState} from 'react'\r\nimport './ChatInput.css'\r\nimport './mediaQuery/chatinputQuery.css'\r\nimport firebase from 'firebase'\r\nimport db from './firebase'\r\nimport { useSelector } from 'react-redux';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {Button} from '@material-ui/core'\r\nfunction ChatInput({channelName,channelId}) {\r\n\r\n    const [Input,setInput]=useState('');\r\n    const user=useSelector(state=>state.user)\r\n    \r\n    const sendMessage=(e)=>{\r\n\r\n        e.preventDefault();\r\n        setInput('')\r\n        if(channelId){\r\n db.collection('rooms').doc(channelId).collection('Messages').add({\r\n\r\n     message:Input,\r\n     timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n     user:user.displayName,\r\n     avatar:user.photoURL\r\n\r\n })\r\n\r\n}\r\n\r\n    }\r\n\r\n\r\n  \r\n return (\r\n        <div className='chat__input'>\r\n            <input value={Input}\r\n            onChange={e=>setInput(e.target.value)}\r\n            placeholder=\"Type a message\"\r\n            />\r\n            <Button type='submit' onClick={sendMessage} className='button'>\r\n                <SendIcon className='btn'/>\r\n            </Button>\r\n           \r\n           \r\n        </div>\r\n    )\r\n    \r\n   \r\n}\r\n\r\nexport default ChatInput\r\n","import React from 'react'\r\nimport './Message.css'\r\n\r\nfunction Message({message,timestamp,user,avatar}) {\r\n    return (\r\n        <div className='message'>\r\n            <img src={avatar} alt=\"Dp\"/>\r\n\r\n            <div className='message__info'>\r\n    <h4>{user} <span className='message__timeStamp'>{new Date(timestamp?.toDate()).toLocaleString()}</span></h4>\r\n    <p>{message}</p>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Chat.css'\r\nimport './mediaQuery/chatQuery.css'\r\nimport {useParams} from 'react-router-dom'\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport db from './firebase';\r\nimport ChatInput from './ChatInput.js'\r\nimport Message from './Message';\r\nfunction Chat() {\r\n    const {roomId}=useParams();\r\n\r\n    const [roomDetailes,setRoomDetailes]=useState(null);\r\n    const [roomMessages,setRoomMessages]=useState([])\r\n\r\n    useEffect(()=>{\r\n\r\n        db.collection('rooms').doc(roomId).onSnapshot(snapshot=>{\r\n             setRoomDetailes(snapshot.data())\r\n             \r\n        })\r\n\r\n        db.collection('rooms').doc(roomId)\r\n        .collection('Messages')\r\n        .orderBy('timestamp','asc')\r\n        .onSnapshot(snapshot=>{\r\n            setRoomMessages(snapshot.docs.map(doc=>doc.data()))\r\n        })\r\n\r\n\r\n    },[roomId])\r\n\r\nconsole.log(roomMessages)\r\n    \r\n    return (\r\n        <div className='chat'>\r\n            \r\n\r\n    <div className='chat__header'>\r\n    <div className='chat__headerLeft'>\r\n\r\n     <h4 className='chat__channelName'>\r\n    <strong>{roomDetailes?.name}</strong>\r\n         <StarBorderIcon/>\r\n         </h4>   \r\n\r\n    </div>\r\n    <div className='chat__headerRight'>\r\n        <p>\r\n            <InfoOutlinedIcon/> Detailes\r\n        </p>\r\n\r\n    </div>\r\n    </div>\r\n\r\n    <div className='chat__messages'>\r\n\r\n{roomMessages.map(({user,avatar,message,timestamp})=>\r\n    <Message\r\n    message={message}\r\n    timestamp={timestamp}\r\n    user={user}\r\n    avatar={avatar}\r\n    />\r\n)}\r\n    </div>\r\n\r\n    <ChatInput channelName={roomDetailes?.name} channelId={roomId}/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport db from './firebase'\r\nimport './SidebarOptions.css'\r\nimport './mediaQuery/sidebaroptionQuery.css'\r\nfunction SidebarOptions({Icon,addChannelOption,id,title}) {\r\nconst history=useHistory()\r\n    const selectChannel=()=>{\r\n        if(id){\r\n            \r\n            history.push(`/room/${id}`)\r\n        }else{\r\n            history.push(title)\r\n        }\r\n    }\r\n\r\n\r\n    const addChannel=()=>{\r\n      const channelName=prompt('please enter Channel Name')\r\n\r\n      if(channelName){\r\n          db.collection('rooms').add({\r\n              name:channelName\r\n          })\r\n      }\r\n    }\r\n    return (\r\n        <div className='SidebarOptions' onClick={addChannelOption?addChannel:selectChannel}>\r\n          {Icon&&<Icon className='SidebarOptions-icon'/>}\r\n          {Icon?(\r\n              <h3>{title}</h3>\r\n              \r\n          ):<h3 className='SidebarOptions-channel'><span className='SidebarOptions-hastag'>#</span> {title}</h3>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOptions\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Sidebar.css'\r\nimport './mediaQuery/sidebarQuery.css'\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SidebarOptions from './SidebarOptions';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport db from './firebase'\r\nimport { useSelector } from 'react-redux';\r\nfunction Sidebar() {\r\n\r\n    const [channels,setchannel]=useState([])\r\n    const user=useSelector(state=>state.user)\r\n\r\n   useEffect(()=>{\r\n\r\n    db.collection('rooms').onSnapshot(snapshot=>{\r\n        setchannel(\r\n            snapshot.docs.map(doc=>{\r\n                return {\r\n                    id:doc.id,\r\n                    name:doc.data().name\r\n                }\r\n            })\r\n        )\r\n    })\r\n\r\n   },[])\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            \r\n            <div className='sidebar-header'>\r\n                <div className='sidebar-info'>\r\n    <h2>{user?.email}</h2>\r\n             \r\n\r\n              <h3>\r\n              <FiberManualRecordIcon/>\r\n                  {user?.displayName}\r\n\r\n              </h3>\r\n\r\n                </div>\r\n    \r\n                <EditIcon/>\r\n              \r\n            </div>\r\n          <SidebarOptions Icon={InsertCommentIcon} title={'Threads'}/>\r\n          <SidebarOptions Icon={InboxIcon} title={'Mentions & reactions'}/>\r\n          <SidebarOptions Icon={DraftsIcon} title={'Svaed items'}/>\r\n          <SidebarOptions Icon={BookmarkBorderIcon} title={'Channel browser'}/>\r\n          <SidebarOptions Icon={PeopleAltIcon} title={'People & user groups'}/>\r\n          <SidebarOptions Icon={AppsIcon}title={'Apps'}/> \r\n          <SidebarOptions Icon={FileCopyIcon} title={'File browser'}/>\r\n          <SidebarOptions Icon={ExpandLessIcon} title={'Show less'}/>\r\n\r\n          <hr/>\r\n\r\n          <SidebarOptions Icon={ExpandMoreIcon}title={'Show more'}/> \r\n          <hr/>\r\n          <SidebarOptions Icon={AddIcon} addChannelOption title={'Channels'}/>\r\n         \r\n             {channels.map(channel=>{\r\n                 return <SidebarOptions title={channel.name} id={channel.id}/>\r\n             })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { SET_USER } from './actionType/actionType';\r\nimport { auth,provider } from './firebase'\r\nimport './Login.css'\r\nfunction Login() {\r\n\r\n   \r\n    const dispatch=useDispatch();\r\n    \r\n    \r\n    const signIn=()=>{\r\n       auth \r\n       .signInWithPopup(provider)\r\n       .then (result=>{\r\n   console.log(result)\r\n\r\n   dispatch({\r\n       type:SET_USER,\r\n       user:result.user\r\n   })\r\n       })\r\n       .catch(error=>{\r\n           alert(error.message)\r\n       })\r\n    }\r\n    return (\r\n        <div className='login'>\r\n            <div className='login__container'>\r\n                <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Slack_Technologies_Logo.svg/1024px-Slack_Technologies_Logo.svg.png' alt='logo'/>\r\n           \r\n           <h1>Sign in to Slack HQ</h1>\r\n           <p>nihaltiwari.slack.com</p>\r\n           <button onClick={signIn}>Sign In with Google</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\nimport Header from './Header'\nimport Chat from './Chat'\nimport Sidebar from './Sidebar'\nimport './App.css';\nimport '../src/mediaQuery/appQuery.css'\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\nimport Login from './Login';\nimport { useSelector } from 'react-redux';\nfunction App() {\n\n  const user=useSelector(state=>state.user);\n  return (\n    <div className='app'>\n       {!user?<Login/>:<Router>     \n        <Header/>\n      <div className='app-body'>\n        <Sidebar/>\n        <Switch>\n          <Route path='/room/:roomId'>\n          <Chat/>\n\n          </Route>\n          <Route path='/'>\n            <div className='Welcome__Note'>\n            <h1>Welcome To Slack </h1> <span className='logo'> <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Slack_Technologies_Logo.svg/1024px-Slack_Technologies_Logo.svg.png' alt='logo'/></span>\n            <p>Create a new Channel or join one.</p>\n            </div>\n           \n\n          </Route>\n        \n        </Switch>\n      \n\n      </div>\n      </Router>\n}\n      \n    </div>\n\n      );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const { SET_USER } = require(\"../actionType/actionType\")\r\n\r\nconst initialState={\r\n    user:null\r\n}\r\n\r\nconst reducer=(state=initialState,action)=>{\r\n\r\n    if(action.type===SET_USER){\r\n\r\n        return {\r\n            ...state,\r\n            user:action.user\r\n        }\r\n    }\r\n\r\n    return {\r\n        ...state\r\n    }\r\n\r\n}\r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducer/reducer';\n\nconst store=createStore(reducer)\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const SET_USER='SET_USER'"],"sourceRoot":""}